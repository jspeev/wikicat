"use strict";var ApplicationConfiguration=function(){var applicationModuleName="wikicat",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("wikicatmod"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("wikicat",{url:"/home",templateUrl:"modules/wikicatmod/views/wikicatmain.client.view.html"}).state("home",{url:"/",templateUrl:"modules/wikicatmod/views/wikicatmain.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Menus",function($scope,Menus){$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("wikicatmod").config(["$stateProvider",function($stateProvider){$stateProvider.state("wikicatmain",{url:"/wikicatmain",templateUrl:"modules/wikicatmod/views/wikicatmain.client.view.html"})}]),angular.module("wikicatmod").controller("WikicatmainController",["$scope","$http","Summary",function($scope,$http,Summary){$scope.Summary=Summary,$http.get("/cat/breeds").success(function(data){function getNextCat(){iCatNum++,iCatBreedNum++,iCatBreedNum===$scope.aryCatBreed.length-1&&(iCatBreedNum=0),$http.get("/cat/search/"+$scope.aryCatBreed[iCatBreedNum]).success(function(data){data.num=iCatNum,$scope.floatingCats.push(data)}).error(function(data){console.log("Error : "+data),clearInterval(timerNextCat)})}$scope.aryCatBreed=data,$scope.floatingCats=[];var iCatNum=-1,iCatBreedNum=-1,timerNextCat=setInterval(function(){getNextCat()},1e3)}).error(function(data){console.log("Error: "+data),clearInterval(timerNextCat)})}]),angular.module("wikicatmod").directive("floatcat",[function(){return{scope:{id:"@id",name:"@name",imgURL:"@imgurl",articlesummary:"@summary"},templateUrl:"modules/wikicatmod/views/floatcat.client.view.html",restrict:"E",controller:["$scope","Summary",function($scope,Summary){$scope.Summary=Summary,$scope.catClick=function(){$scope.Summary.stMainText=$scope.articlesummary}}]}}]),angular.module("wikicatmod").service("Summary",[function(){this.stMainText="content"}]);